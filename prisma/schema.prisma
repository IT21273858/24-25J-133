datasource db {
  provider = "mongodb"
  url      = env("MongoDbUrl")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
}

model Parent {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String     @unique
  password    String
  profile_img String?
  address     String?
  phoneNumber String?
  Children    Children[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Children {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  age         Int?         @default(0)
  email       String       @unique
  password    String
  profile_img String?
  address     String?
  phoneNumber String?
  level       String       @default("easy")
  parent_id   String       @db.ObjectId
  parent      Parent       @relation(fields: [parent_id], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  ChildLevel  ChildLevel[]
  GameScore   GameScore[]
  Readers     Readers?
}

model ChildLevel {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  level           Int      @default(0)
  children_id     String   @db.ObjectId
  children        Children @relation(fields: [children_id], references: [id])
  current_game_id String?  @db.ObjectId
  game            Game?    @relation(fields: [current_game_id], references: [id]) // Add this relation
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Game {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  level        String       @default("easy")
  description  String?
  play_time    String       @default("10") // Estimated play time
  model_type   String       @default("") // Type of model used (e.g., "shape", "pattern")
  instructions String? // Game instructions
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  GameScore    GameScore[]
  ChildLevel   ChildLevel[]
}

model GameScore {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  score       Float    @default(0)
  game_id     String   @db.ObjectId
  game        Game     @relation(fields: [game_id], references: [id])
  children_id String   @db.ObjectId
  children    Children @relation(fields: [children_id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Readers {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  children_id   String       @unique @db.ObjectId
  children      Children     @relation(fields: [children_id], references: [id])
  fluencyLevel  Float
  phonemicLevel Float
  phonicLevel   Float
  comprehension Float
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt()
  assessments   Assessment[]
}

model Assessment {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  fluencyScore  Float
  phonemicScore Float
  phonicScore   Float
  comprehension Float
  timestamp     DateTime @default(now())
  Readers       Readers? @relation(fields: [readersId], references: [id])
  readersId     String?  @db.ObjectId
}
